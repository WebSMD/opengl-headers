<?php

/**
 * This file is part of FFI package.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace FFI\Headers\OpenGL;

enum Extension: string implements ExtensionInterface
{
    case GL_3DFX_MULTISAMPLE = 'GL_3DFX_multisample';
    case GL_3DFX_TBUFFER = 'GL_3DFX_tbuffer';
    case GL_3DFX_TEXTURE_COMPRESSION_FXT1 = 'GL_3DFX_texture_compression_FXT1';
    case GL_AMD_BLEND_MINMAX_FACTOR = 'GL_AMD_blend_minmax_factor';
    case GL_AMD_CONSERVATIVE_DEPTH = 'GL_AMD_conservative_depth';
    case GL_AMD_DEBUG_OUTPUT = 'GL_AMD_debug_output';
    case GL_AMD_DEPTH_CLAMP_SEPARATE = 'GL_AMD_depth_clamp_separate';
    case GL_AMD_DRAW_BUFFERS_BLEND = 'GL_AMD_draw_buffers_blend';
    case GL_AMD_FRAMEBUFFER_MULTISAMPLE_ADVANCED = 'GL_AMD_framebuffer_multisample_advanced';
    case GL_AMD_FRAMEBUFFER_SAMPLE_POSITIONS = 'GL_AMD_framebuffer_sample_positions';
    case GL_AMD_GCN_SHADER = 'GL_AMD_gcn_shader';
    case GL_AMD_GPU_SHADER_HALF_FLOAT = 'GL_AMD_gpu_shader_half_float';
    case GL_AMD_GPU_SHADER_HALF_FLOAT_FETCH = 'GL_AMD_gpu_shader_half_float_fetch';
    case GL_AMD_GPU_SHADER_INT16 = 'GL_AMD_gpu_shader_int16';
    /**
     * Note: This extension conflicts with {@see Extension::GL_NV_GPU_SHADER5}
     */
    case GL_AMD_GPU_SHADER_INT64 = 'GL_AMD_gpu_shader_int64';
    case GL_AMD_INTERLEAVED_ELEMENTS = 'GL_AMD_interleaved_elements';
    case GL_AMD_MULTI_DRAW_INDIRECT = 'GL_AMD_multi_draw_indirect';
    case GL_AMD_NAME_GEN_DELETE = 'GL_AMD_name_gen_delete';
    case GL_AMD_OCCLUSION_QUERY_EVENT = 'GL_AMD_occlusion_query_event';
    case GL_AMD_PERFORMANCE_MONITOR = 'GL_AMD_performance_monitor';
    case GL_AMD_PINNED_MEMORY = 'GL_AMD_pinned_memory';
    case GL_AMD_QUERY_BUFFER_OBJECT = 'GL_AMD_query_buffer_object';
    case GL_AMD_SAMPLE_POSITIONS = 'GL_AMD_sample_positions';
    case GL_AMD_SEAMLESS_CUBEMAP_PER_TEXTURE = 'GL_AMD_seamless_cubemap_per_texture';
    case GL_AMD_SHADER_ATOMIC_COUNTER_OPS = 'GL_AMD_shader_atomic_counter_ops';
    case GL_AMD_SHADER_BALLOT = 'GL_AMD_shader_ballot';
    case GL_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER = 'GL_AMD_shader_explicit_vertex_parameter';
    case GL_AMD_shader_gpu_shader_half_float_fetch = 'GL_AMD_shader_gpu_shader_half_float_fetch';
    case GL_AMD_SHADER_IMAGE_LOAD_STORE_LOD = 'GL_AMD_shader_image_load_store_lod';
    case GL_AMD_SHADER_STENCIL_EXPORT = 'GL_AMD_shader_stencil_export';
    case GL_AMD_SHADER_STENCIL_VALUE_EXPORT = 'GL_AMD_shader_stencil_value_export';
    case GL_AMD_SHADER_TRINARY_MINMAX = 'GL_AMD_shader_trinary_minmax';
    case GL_AMD_SPARSE_TEXTURE = 'GL_AMD_sparse_texture';
    case GL_AMD_STENCIL_OPERATION_EXTENDED = 'GL_AMD_stencil_operation_extended';
    case GL_AMD_TEXTURE_GATHER_BIAS_LOD = 'GL_AMD_texture_gather_bias_lod';
    case GL_AMD_TEXTURE_TEXTURE4 = 'GL_AMD_texture_texture4';
    case GL_AMD_TRANSFORM_FEEDBACK3_LINES_TRIANGLES = 'GL_AMD_transform_feedback3_lines_triangles';
    case GL_AMD_TRANSFORM_FEEDBACK4 = 'GL_AMD_transform_feedback4';
    case GL_AMD_VERTEX_SHADER_LAYER = 'GL_AMD_vertex_shader_layer';
    case GL_AMD_VERTEX_SHADER_TESSELLATOR = 'GL_AMD_vertex_shader_tessellator';
    case GL_AMD_VERTEX_SHADER_VIEWPORT_INDEX = 'GL_AMD_vertex_shader_viewport_index';
    case GL_APPLE_AUX_DEPTH_STENCIL = 'GL_APPLE_aux_depth_stencil';
    case GL_APPLE_CLIENT_STORAGE = 'GL_APPLE_client_storage';
    case GL_APPLE_ELEMENT_ARRAY = 'GL_APPLE_element_array';
    case GL_APPLE_FENCE = 'GL_APPLE_fence';
    case GL_APPLE_FLOAT_PIXELS = 'GL_APPLE_float_pixels';
    case GL_APPLE_FLUSH_BUFFER_RANGE = 'GL_APPLE_flush_buffer_range';
    case GL_APPLE_OBJECT_PURGEABLE = 'GL_APPLE_object_purgeable';
    case GL_APPLE_RGB422 = 'GL_APPLE_rgb_422';
    case GL_APPLE_ROW_BYTES = 'GL_APPLE_row_bytes';
    case GL_APPLE_SPECULAR_VECTOR = 'GL_APPLE_specular_vector';
    case GL_APPLE_TEXTURE_RANGE = 'GL_APPLE_texture_range';
    case GL_APPLE_TRANSFORM_HINT = 'GL_APPLE_transform_hint';
    case GL_APPLE_VERTEX_ARRAY_OBJECT = 'GL_APPLE_vertex_array_object';
    case GL_APPLE_VERTEX_ARRAY_RANGE = 'GL_APPLE_vertex_array_range';
    case GL_APPLE_VERTEX_PROGRAM_EVALUATORS = 'GL_APPLE_vertex_program_evaluators';
    case GL_APPLE_YCBCR_422 = 'GL_APPLE_ycbcr_422';
    case GL_ARB_ES2_COMPATIBILITY = 'GL_ARB_ES2_compatibility';
    case GL_ARB_ES3_1_COMPATIBILITY = 'GL_ARB_ES3_1_compatibility';
    case GL_ARB_ES3_2_COMPATIBILITY = 'GL_ARB_ES3_2_compatibility';
    case GL_ARB_ES3_COMPATIBILITY = 'GL_ARB_ES3_compatibility';
    case GL_ARB_ARRAYS_OF_ARRAYS = 'GL_ARB_arrays_of_arrays';
    case GL_ARB_BASE_INSTANCE = 'GL_ARB_base_instance';
    case GL_ARB_BINDLESS_TEXTURE = 'GL_ARB_bindless_texture';
    case GL_ARB_BLEND_FUNC_EXTENDED = 'GL_ARB_blend_func_extended';
    case GL_ARB_BUFFER_STORAGE = 'GL_ARB_buffer_storage';
    case GL_ARB_CL_EVENT = 'GL_ARB_cl_event';
    case GL_ARB_CLEAR_BUFFER_OBJECT = 'GL_ARB_clear_buffer_object';
    case GL_ARB_CLEAR_TEXTURE = 'GL_ARB_clear_texture';
    case GL_ARB_CLIP_CONTROL = 'GL_ARB_clip_control';
    case GL_ARB_COLOR_BUFFER_FLOAT = 'GL_ARB_color_buffer_float';
    case GL_ARB_COMPATIBILITY = 'GL_ARB_compatibility';
    case GL_ARB_COMPRESSED_TEXTURE_PIXEL_STORAGE = 'GL_ARB_compressed_texture_pixel_storage';
    case GL_ARB_COMPUTE_SHADER = 'GL_ARB_compute_shader';
    case GL_ARB_COMPUTE_VARIABLE_GROUP_SIZE = 'GL_ARB_compute_variable_group_size';
    case GL_ARB_CONDITIONAL_RENDER_INVERTED = 'GL_ARB_conditional_render_inverted';
    case GL_ARB_CONSERVATIVE_DEPTH = 'GL_ARB_conservative_depth';
    case GL_ARB_COPY_BUFFER = 'GL_ARB_copy_buffer';
    case GL_ARB_COPY_IMAGE = 'GL_ARB_copy_image';
    case GL_ARB_CULL_DISTANCE = 'GL_ARB_cull_distance';
    case GL_ARB_DEBUG_OUTPUT = 'GL_ARB_debug_output';
    case GL_ARB_DEPTH_BUFFER_FLOAT = 'GL_ARB_depth_buffer_float';
    case GL_ARB_DEPTH_CLAMP = 'GL_ARB_depth_clamp';
    case GL_ARB_DEPTH_TEXTURE = 'GL_ARB_depth_texture';
    case GL_ARB_DERIVATIVE_CONTROL = 'GL_ARB_derivative_control';
    case GL_ARB_DIRECT_STATE_ACCESS = 'GL_ARB_direct_state_access';
    case GL_ARB_DRAW_BUFFERS = 'GL_ARB_draw_buffers';
    case GL_ARB_DRAW_BUFFERS_BLEND = 'GL_ARB_draw_buffers_blend';
    case GL_ARB_DRAW_ELEMENTS_BASE_VERTEX = 'GL_ARB_draw_elements_base_vertex';
    case GL_ARB_DRAW_INDIRECT = 'GL_ARB_draw_indirect';
    case GL_ARB_DRAW_INSTANCED = 'GL_ARB_draw_instanced';
    case GL_ARB_ENHANCED_LAYOUTS = 'GL_ARB_enhanced_layouts';
    case GL_ARB_EXPLICIT_ATTRIB_LOCATION = 'GL_ARB_explicit_attrib_location';
    case GL_ARB_EXPLICIT_UNIFORM_LOCATION = 'GL_ARB_explicit_uniform_location';
    case GL_ARB_FRAGMENT_COORD_CONVENTIONS = 'GL_ARB_fragment_coord_conventions';
    case GL_ARB_FRAGMENT_LAYER_VIEWPORT = 'GL_ARB_fragment_layer_viewport';
    case GL_ARB_FRAGMENT_PROGRAM = 'GL_ARB_fragment_program';
    case GL_ARB_FRAGMENT_PROGRAM_SHADOW = 'GL_ARB_fragment_program_shadow';
    case GL_ARB_FRAGMENT_SHADER = 'GL_ARB_fragment_shader';
    case GL_ARB_FRAGMENT_SHADER_INTERLOCK = 'GL_ARB_fragment_shader_interlock';
    case GL_ARB_FRAMEBUFFER_NO_ATTACHMENTS = 'GL_ARB_framebuffer_no_attachments';
    case GL_ARB_FRAMEBUFFER_OBJECT = 'GL_ARB_framebuffer_object';
    case GL_ARB_FRAMEBUFFER_S_RGB = 'GL_ARB_framebuffer_sRGB';
    case GL_ARB_GEOMETRY_SHADER4 = 'GL_ARB_geometry_shader4';
    case GL_ARB_GET_PROGRAM_BINARY = 'GL_ARB_get_program_binary';
    case GL_ARB_GET_TEXTURE_SUB_IMAGE = 'GL_ARB_get_texture_sub_image';
    case GL_ARB_GL_SPIRV = 'GL_ARB_gl_spirv';
    case GL_ARB_GPU_SHADER5 = 'GL_ARB_gpu_shader5';
    case GL_ARB_GPU_SHADER_FP64 = 'GL_ARB_gpu_shader_fp64';
    case GL_ARB_GPU_SHADER_INT64 = 'GL_ARB_gpu_shader_int64';
    case GL_ARB_HALF_FLOAT_PIXEL = 'GL_ARB_half_float_pixel';
    case GL_ARB_HALF_FLOAT_VERTEX = 'GL_ARB_half_float_vertex';
    case GL_ARB_imaging = 'GL_ARB_imaging';
    case GL_ARB_INDIRECT_PARAMETERS = 'GL_ARB_indirect_parameters';
    case GL_ARB_INSTANCED_ARRAYS = 'GL_ARB_instanced_arrays';
    case GL_ARB_INTERNALFORMAT_QUERY = 'GL_ARB_internalformat_query';
    case GL_ARB_INTERNALFORMAT_QUERY2 = 'GL_ARB_internalformat_query2';
    case GL_ARB_INVALIDATE_SUBDATA = 'GL_ARB_invalidate_subdata';
    case GL_ARB_MAP_BUFFER_ALIGNMENT = 'GL_ARB_map_buffer_alignment';
    case GL_ARB_MAP_BUFFER_RANGE = 'GL_ARB_map_buffer_range';
    case GL_ARB_MATRIX_PALETTE = 'GL_ARB_matrix_palette';
    case GL_ARB_MULTI_BIND = 'GL_ARB_multi_bind';
    case GL_ARB_MULTI_DRAW_INDIRECT = 'GL_ARB_multi_draw_indirect';
    case GL_ARB_MULTISAMPLE = 'GL_ARB_multisample';
    case GL_ARB_MULTITEXTURE = 'GL_ARB_multitexture';
    case GL_ARB_OCCLUSION_QUERY = 'GL_ARB_occlusion_query';
    case GL_ARB_OCCLUSION_QUERY2 = 'GL_ARB_occlusion_query2';
    case GL_ARB_PARALLEL_SHADER_COMPILE = 'GL_ARB_parallel_shader_compile';
    case GL_ARB_PIPELINE_STATISTICS_QUERY = 'GL_ARB_pipeline_statistics_query';
    case GL_ARB_PIXEL_BUFFER_OBJECT = 'GL_ARB_pixel_buffer_object';
    case GL_ARB_POINT_PARAMETERS = 'GL_ARB_point_parameters';
    case GL_ARB_POINT_SPRITE = 'GL_ARB_point_sprite';
    case GL_ARB_POLYGON_OFFSET_CLAMP = 'GL_ARB_polygon_offset_clamp';
    case GL_ARB_POST_DEPTH_COVERAGE = 'GL_ARB_post_depth_coverage';
    case GL_ARB_PROGRAM_INTERFACE_QUERY = 'GL_ARB_program_interface_query';
    case GL_ARB_PROVOKING_VERTEX = 'GL_ARB_provoking_vertex';
    case GL_ARB_QUERY_BUFFER_OBJECT = 'GL_ARB_query_buffer_object';
    case GL_ARB_ROBUST_BUFFER_ACCESS_BEHAVIOR = 'GL_ARB_robust_buffer_access_behavior';
    case GL_ARB_ROBUSTNESS = 'GL_ARB_robustness';
    case GL_ARB_ROBUSTNESS_ISOLATION = 'GL_ARB_robustness_isolation';
    case GL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION = 'GL_ARB_robustness_share_group_isolation';
    case GL_ARB_SAMPLE_LOCATIONS = 'GL_ARB_sample_locations';
    case GL_ARB_SAMPLE_SHADING = 'GL_ARB_sample_shading';
    case GL_ARB_SAMPLER_OBJECTS = 'GL_ARB_sampler_objects';
    case GL_ARB_SEAMLESS_CUBE_MAP = 'GL_ARB_seamless_cube_map';
    case GL_ARB_SEAMLESS_CUBEMAP_PER_TEXTURE = 'GL_ARB_seamless_cubemap_per_texture';
    case GL_ARB_SEPARATE_SHADER_OBJECTS = 'GL_ARB_separate_shader_objects';
    case GL_ARB_SHADER_ATOMIC_COUNTER_OPS = 'GL_ARB_shader_atomic_counter_ops';
    case GL_ARB_SHADER_ATOMIC_COUNTERS = 'GL_ARB_shader_atomic_counters';
    case GL_ARB_SHADER_BALLOT = 'GL_ARB_shader_ballot';
    case GL_ARB_SHADER_BIT_ENCODING = 'GL_ARB_shader_bit_encoding';
    case GL_ARB_SHADER_CLOCK = 'GL_ARB_shader_clock';
    case GL_ARB_SHADER_DRAW_PARAMETERS = 'GL_ARB_shader_draw_parameters';
    case GL_ARB_SHADER_GROUP_VOTE = 'GL_ARB_shader_group_vote';
    case GL_ARB_SHADER_IMAGE_LOAD_STORE = 'GL_ARB_shader_image_load_store';
    case GL_ARB_SHADER_IMAGE_SIZE = 'GL_ARB_shader_image_size';
    case GL_ARB_SHADER_OBJECTS = 'GL_ARB_shader_objects';
    case GL_ARB_SHADER_PRECISION = 'GL_ARB_shader_precision';
    case GL_ARB_SHADER_STENCIL_EXPORT = 'GL_ARB_shader_stencil_export';
    case GL_ARB_SHADER_STORAGE_BUFFER_OBJECT = 'GL_ARB_shader_storage_buffer_object';
    case GL_ARB_SHADER_SUBROUTINE = 'GL_ARB_shader_subroutine';
    case GL_ARB_SHADER_TEXTURE_IMAGE_SAMPLES = 'GL_ARB_shader_texture_image_samples';
    case GL_ARB_SHADER_TEXTURE_LOD = 'GL_ARB_shader_texture_lod';
    case GL_ARB_SHADER_VIEWPORT_LAYER_ARRAY = 'GL_ARB_shader_viewport_layer_array';
    case GL_ARB_shading_language_100 = 'GL_ARB_shading_language_100';
    case GL_ARB_SHADING_LANGUAGE_420PACK = 'GL_ARB_shading_language_420pack';
    case GL_ARB_SHADING_LANGUAGE_INCLUDE = 'GL_ARB_shading_language_include';
    case GL_ARB_SHADING_LANGUAGE_PACKING = 'GL_ARB_shading_language_packing';
    case GL_ARB_SHADOW = 'GL_ARB_shadow';
    case GL_ARB_SHADOW_AMBIENT = 'GL_ARB_shadow_ambient';
    case GL_ARB_SPARSE_BUFFER = 'GL_ARB_sparse_buffer';
    case GL_ARB_SPARSE_TEXTURE = 'GL_ARB_sparse_texture';
    case GL_ARB_SPARSE_TEXTURE2 = 'GL_ARB_sparse_texture2';
    case GL_ARB_SPARSE_TEXTURE_CLAMP = 'GL_ARB_sparse_texture_clamp';
    case GL_ARB_SPIRV_EXTENSIONS = 'GL_ARB_spirv_extensions';
    case GL_ARB_STENCIL_TEXTURING = 'GL_ARB_stencil_texturing';
    case GL_ARB_SYNC = 'GL_ARB_sync';
    case GL_ARB_TESSELLATION_SHADER = 'GL_ARB_tessellation_shader';
    case GL_ARB_TEXTURE_BARRIER = 'GL_ARB_texture_barrier';
    case GL_ARB_TEXTURE_BORDER_CLAMP = 'GL_ARB_texture_border_clamp';
    case GL_ARB_TEXTURE_BUFFER_OBJECT = 'GL_ARB_texture_buffer_object';
    case GL_ARB_TEXTURE_BUFFER_OBJECT_RGB32 = 'GL_ARB_texture_buffer_object_rgb32';
    case GL_ARB_TEXTURE_BUFFER_RANGE = 'GL_ARB_texture_buffer_range';
    case GL_ARB_TEXTURE_COMPRESSION = 'GL_ARB_texture_compression';
    case GL_ARB_TEXTURE_COMPRESSION_BPTC = 'GL_ARB_texture_compression_bptc';
    case GL_ARB_TEXTURE_COMPRESSION_RGTC = 'GL_ARB_texture_compression_rgtc';
    case GL_ARB_TEXTURE_CUBE_MAP = 'GL_ARB_texture_cube_map';
    case GL_ARB_TEXTURE_CUBE_MAP_ARRAY = 'GL_ARB_texture_cube_map_array';
    case GL_ARB_TEXTURE_ENV_ADD = 'GL_ARB_texture_env_add';
    case GL_ARB_TEXTURE_ENV_COMBINE = 'GL_ARB_texture_env_combine';
    case GL_ARB_TEXTURE_ENV_CROSSBAR = 'GL_ARB_texture_env_crossbar';
    case GL_ARB_TEXTURE_ENV_DOT3 = 'GL_ARB_texture_env_dot3';
    case GL_ARB_TEXTURE_FILTER_ANISOTROPIC = 'GL_ARB_texture_filter_anisotropic';
    case GL_ARB_TEXTURE_FILTER_MINMAX = 'GL_ARB_texture_filter_minmax';
    case GL_ARB_TEXTURE_FLOAT = 'GL_ARB_texture_float';
    case GL_ARB_TEXTURE_GATHER = 'GL_ARB_texture_gather';
    case GL_ARB_TEXTURE_MIRROR_CLAMP_TO_EDGE = 'GL_ARB_texture_mirror_clamp_to_edge';
    case GL_ARB_TEXTURE_MIRRORED_REPEAT = 'GL_ARB_texture_mirrored_repeat';
    case GL_ARB_TEXTURE_MULTISAMPLE = 'GL_ARB_texture_multisample';
    case GL_ARB_TEXTURE_NON_POWER_OF_TWO = 'GL_ARB_texture_non_power_of_two';
    case GL_ARB_TEXTURE_QUERY_LEVELS = 'GL_ARB_texture_query_levels';
    case GL_ARB_TEXTURE_QUERY_LOD = 'GL_ARB_texture_query_lod';
    case GL_ARB_TEXTURE_RECTANGLE = 'GL_ARB_texture_rectangle';
    case GL_ARB_TEXTURE_RG = 'GL_ARB_texture_rg';
    case GL_ARB_TEXTURE_RGB10_A2UI = 'GL_ARB_texture_rgb10_a2ui';
    case GL_ARB_TEXTURE_STENCIL8 = 'GL_ARB_texture_stencil8';
    case GL_ARB_TEXTURE_STORAGE = 'GL_ARB_texture_storage';
    case GL_ARB_TEXTURE_STORAGE_MULTISAMPLE = 'GL_ARB_texture_storage_multisample';
    case GL_ARB_TEXTURE_SWIZZLE = 'GL_ARB_texture_swizzle';
    case GL_ARB_TEXTURE_VIEW = 'GL_ARB_texture_view';
    case GL_ARB_TIMER_QUERY = 'GL_ARB_timer_query';
    case GL_ARB_TRANSFORM_FEEDBACK2 = 'GL_ARB_transform_feedback2';
    case GL_ARB_TRANSFORM_FEEDBACK3 = 'GL_ARB_transform_feedback3';
    case GL_ARB_TRANSFORM_FEEDBACK_INSTANCED = 'GL_ARB_transform_feedback_instanced';
    case GL_ARB_TRANSFORM_FEEDBACK_OVERFLOW_QUERY = 'GL_ARB_transform_feedback_overflow_query';
    case GL_ARB_TRANSPOSE_MATRIX = 'GL_ARB_transpose_matrix';
    case GL_ARB_UNIFORM_BUFFER_OBJECT = 'GL_ARB_uniform_buffer_object';
    case GL_ARB_VERTEX_ARRAY_BGRA = 'GL_ARB_vertex_array_bgra';
    case GL_ARB_VERTEX_ARRAY_OBJECT = 'GL_ARB_vertex_array_object';
    case GL_ARB_VERTEX_ATTRIB_64BIT = 'GL_ARB_vertex_attrib_64bit';
    case GL_ARB_VERTEX_ATTRIB_BINDING = 'GL_ARB_vertex_attrib_binding';
    case GL_ARB_VERTEX_BLEND = 'GL_ARB_vertex_blend';
    case GL_ARB_VERTEX_BUFFER_OBJECT = 'GL_ARB_vertex_buffer_object';
    case GL_ARB_VERTEX_PROGRAM = 'GL_ARB_vertex_program';
    case GL_ARB_VERTEX_SHADER = 'GL_ARB_vertex_shader';
    case GL_ARB_VERTEX_TYPE_2_10_10_10_REV = 'GL_ARB_vertex_type_2_10_10_10_rev';
    case GL_ARB_VERTEX_TYPE_10F_11F_11F_REV = 'GL_ARB_vertex_type_10f_11f_11f_rev';
    case GL_ARB_VIEWPORT_ARRAY = 'GL_ARB_viewport_array';
    case GL_ARB_WINDOW_POS = 'GL_ARB_window_pos';
    case GL_ATI_DRAW_BUFFERS = 'GL_ATI_draw_buffers';
    case GL_ATI_ELEMENT_ARRAY = 'GL_ATI_element_array';
    case GL_ATI_ENVMAP_BUMPMAP = 'GL_ATI_envmap_bumpmap';
    case GL_ATI_FRAGMENT_SHADER = 'GL_ATI_fragment_shader';
    case GL_ATI_MAP_OBJECT_BUFFER = 'GL_ATI_map_object_buffer';
    case GL_ATI_MEMINFO = 'GL_ATI_meminfo';
    case GL_ATI_pixel_format_float = 'GL_ATI_pixel_format_float';
    case GL_ATI_PN_TRIANGLES = 'GL_ATI_pn_triangles';
    case GL_ATI_SEPARATE_STENCIL = 'GL_ATI_separate_stencil';
    case GL_ATI_TEXT_FRAGMENT_SHADER = 'GL_ATI_text_fragment_shader';
    case GL_ATI_TEXTURE_ENV_COMBINE3 = 'GL_ATI_texture_env_combine3';
    case GL_ATI_TEXTURE_FLOAT = 'GL_ATI_texture_float';
    case GL_ATI_TEXTURE_MIRROR_ONCE = 'GL_ATI_texture_mirror_once';
    case GL_ATI_VERTEX_ARRAY_OBJECT = 'GL_ATI_vertex_array_object';
    case GL_ATI_VERTEX_ATTRIB_ARRAY_OBJECT = 'GL_ATI_vertex_attrib_array_object';
    case GL_ATI_VERTEX_STREAMS = 'GL_ATI_vertex_streams';
    case GL_EXT_422_PIXELS = 'GL_EXT_422_pixels';
    case GL_EXT_EGL_IMAGE_STORAGE = 'GL_EXT_EGL_image_storage';
    case GL_EXT_EGL_SYNC = 'GL_EXT_EGL_sync';
    case GL_EXT_ABGR = 'GL_EXT_abgr';
    case GL_EXT_BGRA = 'GL_EXT_bgra';
    case GL_EXT_BINDABLE_UNIFORM = 'GL_EXT_bindable_uniform';
    case GL_EXT_BLEND_COLOR = 'GL_EXT_blend_color';
    case GL_EXT_BLEND_EQUATION_SEPARATE = 'GL_EXT_blend_equation_separate';
    case GL_EXT_BLEND_FUNC_SEPARATE = 'GL_EXT_blend_func_separate';
    case GL_EXT_BLEND_LOGIC_OP = 'GL_EXT_blend_logic_op';
    case GL_EXT_BLEND_MINMAX = 'GL_EXT_blend_minmax';
    case GL_EXT_BLEND_SUBTRACT = 'GL_EXT_blend_subtract';
    case GL_EXT_CLIP_VOLUME_HINT = 'GL_EXT_clip_volume_hint';
    case GL_EXT_CMYKA = 'GL_EXT_cmyka';
    case GL_EXT_COLOR_SUBTABLE = 'GL_EXT_color_subtable';
    case GL_EXT_COMPILED_VERTEX_ARRAY = 'GL_EXT_compiled_vertex_array';
    case GL_EXT_CONVOLUTION = 'GL_EXT_convolution';
    case GL_EXT_COORDINATE_FRAME = 'GL_EXT_coordinate_frame';
    case GL_EXT_COPY_TEXTURE = 'GL_EXT_copy_texture';
    case GL_EXT_CULL_VERTEX = 'GL_EXT_cull_vertex';
    case GL_EXT_DEBUG_LABEL = 'GL_EXT_debug_label';
    case GL_EXT_DEBUG_MARKER = 'GL_EXT_debug_marker';
    case GL_EXT_DEPTH_BOUNDS_TEST = 'GL_EXT_depth_bounds_test';
    case GL_EXT_DIRECT_STATE_ACCESS = 'GL_EXT_direct_state_access';
    case GL_EXT_DRAW_BUFFERS2 = 'GL_EXT_draw_buffers2';
    case GL_EXT_DRAW_INSTANCED = 'GL_EXT_draw_instanced';
    case GL_EXT_DRAW_RANGE_ELEMENTS = 'GL_EXT_draw_range_elements';
    case GL_EXT_EXTERNAL_BUFFER = 'GL_EXT_external_buffer';
    case GL_EXT_FOG_COORD = 'GL_EXT_fog_coord';
    case GL_EXT_FRAGMENT_LIGHTING = 'GL_EXT_fragment_lighting';
    case GL_EXT_FRAMEBUFFER_BLIT = 'GL_EXT_framebuffer_blit';
    case GL_EXT_FRAMEBUFFER_MULTISAMPLE = 'GL_EXT_framebuffer_multisample';
    case GL_EXT_FRAMEBUFFER_MULTISAMPLE_BLIT_SCALED = 'GL_EXT_framebuffer_multisample_blit_scaled';
    case GL_EXT_FRAMEBUFFER_OBJECT = 'GL_EXT_framebuffer_object';
    case GL_EXT_FRAMEBUFFER_SRGB = 'GL_EXT_framebuffer_sRGB';
    case GL_EXT_GEOMETRY_SHADER4 = 'GL_EXT_geometry_shader4';
    case GL_EXT_GPU_PROGRAM_PARAMETERS = 'GL_EXT_gpu_program_parameters';
    case GL_EXT_GPU_SHADER4 = 'GL_EXT_gpu_shader4';
    case GL_EXT_HISTOGRAM = 'GL_EXT_histogram';
    case GL_EXT_INDEX_ARRAY_FORMATS = 'GL_EXT_index_array_formats';
    case GL_EXT_INDEX_FUNC = 'GL_EXT_index_func';
    case GL_EXT_INDEX_MATERIAL = 'GL_EXT_index_material';
    case GL_EXT_INDEX_TEXTURE = 'GL_EXT_index_texture';
    case GL_EXT_LIGHT_TEXTURE = 'GL_EXT_light_texture';
    case GL_EXT_MEMORY_OBJECT = 'GL_EXT_memory_object';
    case GL_EXT_MEMORY_OBJECT_FD = 'GL_EXT_memory_object_fd';
    case GL_EXT_MEMORY_OBJECT_WIN32 = 'GL_EXT_memory_object_win32';
    case GL_EXT_MISC_ATTRIBUTE = 'GL_EXT_misc_attribute';
    case GL_EXT_MULTI_DRAW_ARRAYS = 'GL_EXT_multi_draw_arrays';
    case GL_EXT_MULTISAMPLE = 'GL_EXT_multisample';
    case GL_EXT_MULTIVIEW_TESSELLATION_GEOMETRY_SHADER = 'GL_EXT_multiview_tessellation_geometry_shader';
    case GL_EXT_MULTIVIEW_TEXTURE_MULTISAMPLE = 'GL_EXT_multiview_texture_multisample';
    case GL_EXT_MULTIVIEW_TIMER_QUERY = 'GL_EXT_multiview_timer_query';
    case GL_EXT_PACKED_DEPTH_STENCIL = 'GL_EXT_packed_depth_stencil';
    case GL_EXT_PACKED_FLOAT = 'GL_EXT_packed_float';
    case GL_EXT_PACKED_PIXELS = 'GL_EXT_packed_pixels';
    case GL_EXT_PALETTED_TEXTURE = 'GL_EXT_paletted_texture';
    case GL_EXT_PIXEL_BUFFER_OBJECT = 'GL_EXT_pixel_buffer_object';
    case GL_EXT_PIXEL_TRANSFORM = 'GL_EXT_pixel_transform';
    case GL_EXT_PIXEL_TRANSFORM_COLOR_TABLE = 'GL_EXT_pixel_transform_color_table';
    case GL_EXT_POINT_PARAMETERS = 'GL_EXT_point_parameters';
    case GL_EXT_POLYGON_OFFSET = 'GL_EXT_polygon_offset';
    case GL_EXT_POLYGON_OFFSET_CLAMP = 'GL_EXT_polygon_offset_clamp';
    case GL_EXT_POST_DEPTH_COVERAGE = 'GL_EXT_post_depth_coverage';
    case GL_EXT_PROVOKING_VERTEX = 'GL_EXT_provoking_vertex';
    case GL_EXT_RASTER_MULTISAMPLE = 'GL_EXT_raster_multisample';
    case GL_EXT_RESCALE_NORMAL = 'GL_EXT_rescale_normal';
    case GL_EXT_SCENE_MARKER = 'GL_EXT_scene_marker';
    case GL_EXT_SECONDARY_COLOR = 'GL_EXT_secondary_color';
    case GL_EXT_SEMAPHORE = 'GL_EXT_semaphore';
    case GL_EXT_SEMAPHORE_FD = 'GL_EXT_semaphore_fd';
    case GL_EXT_SEMAPHORE_WIN32 = 'GL_EXT_semaphore_win32';
    case GL_EXT_SEPARATE_SHADER_OBJECTS = 'GL_EXT_separate_shader_objects';
    case GL_EXT_SEPARATE_SPECULAR_COLOR = 'GL_EXT_separate_specular_color';
    case GL_EXT_SHADER_FRAMEBUFFER_FETCH = 'GL_EXT_shader_framebuffer_fetch';
    case GL_EXT_SHADER_FRAMEBUFFER_FETCH_NON_COHERENT = 'GL_EXT_shader_framebuffer_fetch_non_coherent';
    case GL_EXT_SHADER_IMAGE_LOAD_FORMATTED = 'GL_EXT_shader_image_load_formatted';
    case GL_EXT_SHADER_IMAGE_LOAD_STORE = 'GL_EXT_shader_image_load_store';
    case GL_EXT_SHADER_INTEGER_MIX = 'GL_EXT_shader_integer_mix';
    case GL_EXT_SHADOW_FUNCS = 'GL_EXT_shadow_funcs';
    case GL_EXT_SHARED_TEXTURE_PALETTE = 'GL_EXT_shared_texture_palette';
    case GL_EXT_SPARSE_TEXTURE2 = 'GL_EXT_sparse_texture2';
    case GL_EXT_STENCIL_CLEAR_TAG = 'GL_EXT_stencil_clear_tag';
    case GL_EXT_STENCIL_TWO_SIDE = 'GL_EXT_stencil_two_side';
    case GL_EXT_STENCIL_WRAP = 'GL_EXT_stencil_wrap';
    case GL_EXT_SUBTEXTURE = 'GL_EXT_subtexture';
    case GL_EXT_SWAP_CONTROL = 'GL_EXT_swap_control';
    case GL_EXT_TEXTURE = 'GL_EXT_texture';
    case GL_EXT_TEXTURE_3D = 'GL_EXT_texture3D';
    case GL_EXT_TEXTURE_ARRAY = 'GL_EXT_texture_array';
    case GL_EXT_TEXTURE_BUFFER_OBJECT = 'GL_EXT_texture_buffer_object';
    case GL_EXT_TEXTURE_COMPRESSION_DXT1 = 'GL_EXT_texture_compression_dxt1';
    case GL_EXT_TEXTURE_COMPRESSION_LATC = 'GL_EXT_texture_compression_latc';
    case GL_EXT_TEXTURE_COMPRESSION_RGTC = 'GL_EXT_texture_compression_rgtc';
    case GL_EXT_TEXTURE_COMPRESSION_S3TC = 'GL_EXT_texture_compression_s3tc';
    case GL_EXT_texture_cube_map = 'GL_EXT_texture_cube_map';
    case GL_EXT_TEXTURE_ENV = 'GL_EXT_texture_env';
    case GL_EXT_TEXTURE_ENV_ADD = 'GL_EXT_texture_env_add';
    case GL_EXT_TEXTURE_ENV_COMBINE = 'GL_EXT_texture_env_combine';
    case GL_EXT_TEXTURE_ENV_DOT3 = 'GL_EXT_texture_env_dot3';
    case GL_EXT_TEXTURE_FILTER_ANISOTROPIC = 'GL_EXT_texture_filter_anisotropic';
    case GL_EXT_TEXTURE_FILTER_MINMAX = 'GL_EXT_texture_filter_minmax';
    case GL_EXT_TEXTURE_INTEGER = 'GL_EXT_texture_integer';
    case GL_EXT_TEXTURE_LOD_BIAS = 'GL_EXT_texture_lod_bias';
    case GL_EXT_TEXTURE_MIRROR_CLAMP = 'GL_EXT_texture_mirror_clamp';
    case GL_EXT_TEXTURE_OBJECT = 'GL_EXT_texture_object';
    case GL_EXT_TEXTURE_PERTURB_NORMAL = 'GL_EXT_texture_perturb_normal';
    case GL_EXT_TEXTURE_SRGB = 'GL_EXT_texture_sRGB';
    case GL_EXT_TEXTURE_SRGB_R8 = 'GL_EXT_texture_sRGB_R8';
    case GL_EXT_TEXTURE_SRGB_RG8 = 'GL_EXT_texture_sRGB_RG8';
    case GL_EXT_TEXTURE_S_RGB_DECODE = 'GL_EXT_texture_sRGB_decode';
    case GL_EXT_TEXTURE_SHADOW_LOD = 'GL_EXT_texture_shadow_lod';
    case GL_EXT_TEXTURE_SHARED_EXPONENT = 'GL_EXT_texture_shared_exponent';
    case GL_EXT_TEXTURE_SNORM = 'GL_EXT_texture_snorm';
    case GL_EXT_TEXTURE_STORAGE = 'GL_EXT_texture_storage';
    case GL_EXT_TEXTURE_SWIZZLE = 'GL_EXT_texture_swizzle';
    case GL_EXT_TIMER_QUERY = 'GL_EXT_timer_query';
    case GL_EXT_TRANSFORM_FEEDBACK = 'GL_EXT_transform_feedback';
    case GL_EXT_VERTEX_ARRAY = 'GL_EXT_vertex_array';
    case GL_EXT_VERTEX_ARRAY_BGRA = 'GL_EXT_vertex_array_bgra';
    case GL_EXT_VERTEX_ATTRIB_64BIT = 'GL_EXT_vertex_attrib_64bit';
    case GL_EXT_VERTEX_SHADER = 'GL_EXT_vertex_shader';
    case GL_EXT_VERTEX_WEIGHTING = 'GL_EXT_vertex_weighting';
    case GL_EXT_WIN32_KEYED_MUTEX = 'GL_EXT_win32_keyed_mutex';
    case GL_EXT_WINDOW_RECTANGLES = 'GL_EXT_window_rectangles';
    case GL_EXT_X11_SYNC_OBJECT = 'GL_EXT_x11_sync_object';
    case GL_GREMEDY_FRAME_TERMINATOR = 'GL_GREMEDY_frame_terminator';
    case GL_GREMEDY_STRING_MARKER = 'GL_GREMEDY_string_marker';
    case GL_HP_CONVOLUTION_BORDER_MODES = 'GL_HP_convolution_border_modes';
    case GL_HP_IMAGE_TRANSFORM = 'GL_HP_image_transform';
    case GL_HP_OCCLUSION_TEST = 'GL_HP_occlusion_test';
    case GL_HP_TEXTURE_LIGHTING = 'GL_HP_texture_lighting';
    case GL_IBM_CULL_VERTEX = 'GL_IBM_cull_vertex';
    case GL_IBM_MULTIMODE_DRAW_ARRAYS = 'GL_IBM_multimode_draw_arrays';
    case GL_IBM_RASTERPOS_CLIP = 'GL_IBM_rasterpos_clip';
    case GL_IBM_STATIC_DATA = 'GL_IBM_static_data';
    case GL_IBM_TEXTURE_MIRRORED_REPEAT = 'GL_IBM_texture_mirrored_repeat';
    case GL_IBM_VERTEX_ARRAY_LISTS = 'GL_IBM_vertex_array_lists';
    case GL_INGR_blend_func_separate = 'GL_INGR_blend_func_separate';
    case GL_INGR_COLOR_CLAMP = 'GL_INGR_color_clamp';
    case GL_INGR_INTERLACE_READ = 'GL_INGR_interlace_read';
    case GL_INTEL_BLACKHOLE_RENDER = 'GL_INTEL_blackhole_render';
    case GL_INTEL_CONSERVATIVE_RASTERIZATION = 'GL_INTEL_conservative_rasterization';
    case GL_INTEL_FRAGMENT_SHADER_ORDERING = 'GL_INTEL_fragment_shader_ordering';
    case GL_INTEL_FRAMEBUFFER_CMAA = 'GL_INTEL_framebuffer_CMAA';
    case GL_INTEL_MAP_TEXTURE = 'GL_INTEL_map_texture';
    case GL_INTEL_PARALLEL_ARRAYS = 'GL_INTEL_parallel_arrays';
    case GL_INTEL_PERFORMANCE_QUERY = 'GL_INTEL_performance_query';
    case GL_INTEL_SHADER_INTEGER_FUNCTIONS2 = 'GL_INTEL_shader_integer_functions2';
    case GL_INTEL_TEXTURE_SCISSOR = 'GL_INTEL_texture_scissor';
    case GL_KHR_BLEND_EQUATION_ADVANCED = 'GL_KHR_blend_equation_advanced';
    case GL_KHR_BLEND_EQUATION_ADVANCED_COHERENT = 'GL_KHR_blend_equation_advanced_coherent';
    case GL_KHR_CONTEXT_FLUSH_CONTROL = 'GL_KHR_context_flush_control';
    case GL_KHR_DEBUG = 'GL_KHR_debug';
    case GL_KHR_NO_ERROR = 'GL_KHR_no_error';
    case GL_KHR_PARALLEL_SHADER_COMPILE = 'GL_KHR_parallel_shader_compile';
    case GL_KHR_ROBUST_BUFFER_ACCESS_BEHAVIOR = 'GL_KHR_robust_buffer_access_behavior';
    case GL_KHR_ROBUSTNESS = 'GL_KHR_robustness';
    case GL_KHR_SHADER_SUBGROUP = 'GL_KHR_shader_subgroup';
    case GL_KHR_TEXTURE_COMPRESSION_ASTC_HDR = 'GL_KHR_texture_compression_astc_hdr';
    case GL_KHR_TEXTURE_COMPRESSION_ASTC_LDR = 'GL_KHR_texture_compression_astc_ldr';
    case GL_KHR_TEXTURE_COMPRESSION_ASTC_SLICED_3D = 'GL_KHR_texture_compression_astc_sliced_3d';
    case GL_MESAX_TEXTURE_STACK = 'GL_MESAX_texture_stack';
    case GL_MESA_FRAMEBUFFER_FLIP_X = 'GL_MESA_framebuffer_flip_x';
    case GL_MESA_FRAMEBUFFER_FLIP_Y = 'GL_MESA_framebuffer_flip_y';
    case GL_MESA_FRAMEBUFFER_SWAP_XY = 'GL_MESA_framebuffer_swap_xy';
    case GL_MESA_PACK_INVERT = 'GL_MESA_pack_invert';
    case GL_MESA_PROGRAM_BINARY_FORMATS = 'GL_MESA_program_binary_formats';
    case GL_MESA_RESIZE_BUFFERS = 'GL_MESA_resize_buffers';
    case GL_MESA_SHADER_INTEGER_FUNCTIONS = 'GL_MESA_shader_integer_functions';
    case GL_MESA_TILE_RASTER_ORDER = 'GL_MESA_tile_raster_order';
    case GL_MESA_WINDOW_POS = 'GL_MESA_window_pos';
    case GL_MESA_YCBCR_TEXTURE = 'GL_MESA_ycbcr_texture';
    case GL_NVX_BLEND_EQUATION_ADVANCED_MULTI_DRAW_BUFFERS = 'GL_NVX_blend_equation_advanced_multi_draw_buffers';
    case GL_NVX_CONDITIONAL_RENDER = 'GL_NVX_conditional_render';
    case GL_NVX_GPU_MEMORY_INFO = 'GL_NVX_gpu_memory_info';
    case GL_NVX_GPU_MULTICAST2 = 'GL_NVX_gpu_multicast2';
    case GL_NVX_LINKED_GPU_MULTICAST = 'GL_NVX_linked_gpu_multicast';
    case GL_NVX_PROGRESS_FENCE = 'GL_NVX_progress_fence';
    case GL_NV_ALPHA_TO_COVERAGE_DITHER_CONTROL = 'GL_NV_alpha_to_coverage_dither_control';
    case GL_NV_BINDLESS_MULTI_DRAW_INDIRECT = 'GL_NV_bindless_multi_draw_indirect';
    case GL_NV_BINDLESS_MULTI_DRAW_INDIRECT_COUNT = 'GL_NV_bindless_multi_draw_indirect_count';
    case GL_NV_BINDLESS_TEXTURE = 'GL_NV_bindless_texture';
    case GL_NV_BLEND_EQUATION_ADVANCED = 'GL_NV_blend_equation_advanced';
    case GL_NV_BLEND_EQUATION_ADVANCED_COHERENT = 'GL_NV_blend_equation_advanced_coherent';
    case GL_NV_BLEND_MINMAX_FACTOR = 'GL_NV_blend_minmax_factor';
    case GL_NV_BLEND_SQUARE = 'GL_NV_blend_square';
    case GL_NV_CLIP_SPACE_W_SCALING = 'GL_NV_clip_space_w_scaling';
    case GL_NV_COMMAND_LIST = 'GL_NV_command_list';
    case GL_NV_COMPUTE_PROGRAM5 = 'GL_NV_compute_program5';
    case GL_NV_COMPUTE_SHADER_DERIVATIVES = 'GL_NV_compute_shader_derivatives';
    case GL_NV_CONDITIONAL_RENDER = 'GL_NV_conditional_render';
    case GL_NV_CONSERVATIVE_RASTER = 'GL_NV_conservative_raster';
    case GL_NV_CONSERVATIVE_RASTER_DILATE = 'GL_NV_conservative_raster_dilate';
    case GL_NV_CONSERVATIVE_RASTER_PRE_SNAP = 'GL_NV_conservative_raster_pre_snap';
    case GL_NV_CONSERVATIVE_RASTER_PRE_SNAP_TRIANGLES = 'GL_NV_conservative_raster_pre_snap_triangles';
    case GL_NV_CONSERVATIVE_RASTER_UNDERESTIMATION = 'GL_NV_conservative_raster_underestimation';
    case GL_NV_COPY_DEPTH_TO_COLOR = 'GL_NV_copy_depth_to_color';
    case GL_NV_COPY_IMAGE = 'GL_NV_copy_image';
    case GL_NV_DEEP_TEXTURE_3D = 'GL_NV_deep_texture3D';
    case GL_NV_DEPTH_BUFFER_FLOAT = 'GL_NV_depth_buffer_float';
    case GL_NV_DEPTH_CLAMP = 'GL_NV_depth_clamp';
    case GL_NV_DRAW_TEXTURE = 'GL_NV_draw_texture';
    case GL_NV_DRAW_VULKAN_IMAGE = 'GL_NV_draw_vulkan_image';
    case GL_NV_EVALUATORS = 'GL_NV_evaluators';
    case GL_NV_EXPLICIT_MULTISAMPLE = 'GL_NV_explicit_multisample';
    case GL_NV_FENCE = 'GL_NV_fence';
    case GL_NV_FILL_RECTANGLE = 'GL_NV_fill_rectangle';
    case GL_NV_FLOAT_BUFFER = 'GL_NV_float_buffer';
    case GL_NV_FOG_DISTANCE = 'GL_NV_fog_distance';
    case GL_NV_FRAGMENT_COVERAGE_TO_COLOR = 'GL_NV_fragment_coverage_to_color';
    case GL_NV_FRAGMENT_PROGRAM = 'GL_NV_fragment_program';
    case GL_NV_FRAGMENT_PROGRAM2 = 'GL_NV_fragment_program2';
    case GL_NV_FRAGMENT_PROGRAM4 = 'GL_NV_fragment_program4';
    case GL_NV_FRAGMENT_PROGRAM_OPTION = 'GL_NV_fragment_program_option';
    case GL_NV_FRAGMENT_SHADER_BARYCENTRIC = 'GL_NV_fragment_shader_barycentric';
    case GL_NV_FRAGMENT_SHADER_INTERLOCK = 'GL_NV_fragment_shader_interlock';
    case GL_NV_FRAMEBUFFER_MIXED_SAMPLES = 'GL_NV_framebuffer_mixed_samples';
    case GL_NV_FRAMEBUFFER_MULTISAMPLE_COVERAGE = 'GL_NV_framebuffer_multisample_coverage';
    case GL_NV_GEOMETRY_PROGRAM4 = 'GL_NV_geometry_program4';
    case GL_NV_GEOMETRY_SHADER4 = 'GL_NV_geometry_shader4';
    case GL_NV_GEOMETRY_SHADER_PASSTHROUGH = 'GL_NV_geometry_shader_passthrough';
    case GL_NV_GPU_MULTICAST = 'GL_NV_gpu_multicast';
    case GL_NV_GPU_PROGRAM4 = 'GL_NV_gpu_program4';
    case GL_NV_GPU_PROGRAM5 = 'GL_NV_gpu_program5';
    case GL_NV_GPU_PROGRAM5_MEM_EXTENDED = 'GL_NV_gpu_program5_mem_extended';
    /**
     * Note: This extension conflicts with {@see Extension::GL_AMD_GPU_SHADER_INT64}
     */
    case GL_NV_GPU_SHADER5 = 'GL_NV_gpu_shader5';
    case GL_NV_HALF_FLOAT = 'GL_NV_half_float';
    case GL_NV_INTERNALFORMAT_SAMPLE_QUERY = 'GL_NV_internalformat_sample_query';
    case GL_NV_LIGHT_MAX_EXPONENT = 'GL_NV_light_max_exponent';
    case GL_NV_MEMORY_ATTACHMENT = 'GL_NV_memory_attachment';
    case GL_NV_MEMORY_OBJECT_SPARSE = 'GL_NV_memory_object_sparse';
    case GL_NV_MESH_SHADER = 'GL_NV_mesh_shader';
    case GL_NV_MULTISAMPLE_COVERAGE = 'GL_NV_multisample_coverage';
    case GL_NV_MULTISAMPLE_FILTER_HINT = 'GL_NV_multisample_filter_hint';
    case GL_NV_OCCLUSION_QUERY = 'GL_NV_occlusion_query';
    case GL_NV_PACKED_DEPTH_STENCIL = 'GL_NV_packed_depth_stencil';
    case GL_NV_PARAMETER_BUFFER_OBJECT = 'GL_NV_parameter_buffer_object';
    case GL_NV_PARAMETER_BUFFER_OBJECT2 = 'GL_NV_parameter_buffer_object2';
    case GL_NV_PATH_RENDERING = 'GL_NV_path_rendering';
    case GL_NV_PATH_RENDERING_SHARED_EDGE = 'GL_NV_path_rendering_shared_edge';
    case GL_NV_PIXEL_DATA_RANGE = 'GL_NV_pixel_data_range';
    case GL_NV_POINT_SPRITE = 'GL_NV_point_sprite';
    case GL_NV_PRESENT_VIDEO = 'GL_NV_present_video';
    case GL_NV_PRIMITIVE_RESTART = 'GL_NV_primitive_restart';
    case GL_NV_PRIMITIVE_SHADING_RATE = 'GL_NV_primitive_shading_rate';
    case GL_NV_QUERY_RESOURCE = 'GL_NV_query_resource';
    case GL_NV_QUERY_RESOURCE_TAG = 'GL_NV_query_resource_tag';
    case GL_NV_REGISTER_COMBINERS = 'GL_NV_register_combiners';
    case GL_NV_REGISTER_COMBINERS2 = 'GL_NV_register_combiners2';
    case GL_NV_REPRESENTATIVE_FRAGMENT_TEST = 'GL_NV_representative_fragment_test';
    case GL_NV_ROBUSTNESS_VIDEO_MEMORY_PURGE = 'GL_NV_robustness_video_memory_purge';
    case GL_NV_SAMPLE_LOCATIONS = 'GL_NV_sample_locations';
    case GL_NV_SAMPLE_MASK_OVERRIDE_COVERAGE = 'GL_NV_sample_mask_override_coverage';
    case GL_NV_SCISSOR_EXCLUSIVE = 'GL_NV_scissor_exclusive';
    case GL_NV_SHADER_ATOMIC_COUNTERS = 'GL_NV_shader_atomic_counters';
    case GL_NV_SHADER_ATOMIC_FLOAT = 'GL_NV_shader_atomic_float';
    case GL_NV_SHADER_ATOMIC_FLOAT_64 = 'GL_NV_shader_atomic_float64';
    case GL_NV_SHADER_ATOMIC_FP16_VECTOR = 'GL_NV_shader_atomic_fp16_vector';
    case GL_NV_SHADER_ATOMIC_INT64 = 'GL_NV_shader_atomic_int64';
    case GL_NV_SHADER_BUFFER_LOAD = 'GL_NV_shader_buffer_load';
    case GL_NV_SHADER_BUFFER_STORE = 'GL_NV_shader_buffer_store';
    case GL_NV_SHADER_STORAGE_BUFFER_OBJECT = 'GL_NV_shader_storage_buffer_object';
    case GL_NV_SHADER_SUBGROUP_PARTITIONED = 'GL_NV_shader_subgroup_partitioned';
    case GL_NV_SHADER_TEXTURE_FOOTPRINT = 'GL_NV_shader_texture_footprint';
    case GL_NV_SHADER_THREAD_GROUP = 'GL_NV_shader_thread_group';
    case GL_NV_SHADER_THREAD_SHUFFLE = 'GL_NV_shader_thread_shuffle';
    case GL_NV_SHADING_RATE_IMAGE = 'GL_NV_shading_rate_image';
    case GL_NV_STEREO_VIEW_RENDERING = 'GL_NV_stereo_view_rendering';
    case GL_NV_TESSELLATION_PROGRAM5 = 'GL_NV_tessellation_program5';
    case GL_NV_TEXGEN_EMBOSS = 'GL_NV_texgen_emboss';
    case GL_NV_TEXGEN_REFLECTION = 'GL_NV_texgen_reflection';
    case GL_NV_TEXTURE_BARRIER = 'GL_NV_texture_barrier';
    case GL_NV_TEXTURE_COMPRESSION_VTC = 'GL_NV_texture_compression_vtc';
    case GL_NV_TEXTURE_ENV_COMBINE4 = 'GL_NV_texture_env_combine4';
    case GL_NV_TEXTURE_EXPAND_NORMAL = 'GL_NV_texture_expand_normal';
    case GL_NV_TEXTURE_MULTISAMPLE = 'GL_NV_texture_multisample';
    case GL_NV_TEXTURE_RECTANGLE = 'GL_NV_texture_rectangle';
    case GL_NV_TEXTURE_RECTANGLE_COMPRESSED = 'GL_NV_texture_rectangle_compressed';
    case GL_NV_TEXTURE_SHADER = 'GL_NV_texture_shader';
    case GL_NV_TEXTURE_SHADER2 = 'GL_NV_texture_shader2';
    case GL_NV_TEXTURE_SHADER3 = 'GL_NV_texture_shader3';
    case GL_NV_TIMELINE_SEMAPHORE = 'GL_NV_timeline_semaphore';
    case GL_NV_TRANSFORM_FEEDBACK = 'GL_NV_transform_feedback';
    case GL_NV_TRANSFORM_FEEDBACK2 = 'GL_NV_transform_feedback2';
    case GL_NV_UNIFORM_BUFFER_UNIFIED_MEMORY = 'GL_NV_uniform_buffer_unified_memory';
    case GL_NV_VDPAU_INTEROP = 'GL_NV_vdpau_interop';
    case GL_NV_VDPAU_INTEROP2 = 'GL_NV_vdpau_interop2';
    case GL_NV_VERTEX_ARRAY_RANGE = 'GL_NV_vertex_array_range';
    case GL_NV_VERTEX_ARRAY_RANGE2 = 'GL_NV_vertex_array_range2';
    case GL_NV_VERTEX_ATTRIB_INTEGER_64BIT = 'GL_NV_vertex_attrib_integer_64bit';
    case GL_NV_VERTEX_BUFFER_UNIFIED_MEMORY = 'GL_NV_vertex_buffer_unified_memory';
    case GL_NV_VERTEX_PROGRAM = 'GL_NV_vertex_program';
    case GL_NV_VERTEX_PROGRAM1_1 = 'GL_NV_vertex_program1_1';
    case GL_NV_VERTEX_PROGRAM2 = 'GL_NV_vertex_program2';
    case GL_NV_VERTEX_PROGRAM2_OPTION = 'GL_NV_vertex_program2_option';
    case GL_NV_VERTEX_PROGRAM3 = 'GL_NV_vertex_program3';
    case GL_NV_VERTEX_PROGRAM4 = 'GL_NV_vertex_program4';
    case GL_NV_VIDEO_CAPTURE = 'GL_NV_video_capture';
    case GL_NV_VIEWPORT_ARRAY2 = 'GL_NV_viewport_array2';
    case GL_NV_VIEWPORT_SWIZZLE = 'GL_NV_viewport_swizzle';
    case GL_OES_BYTE_COORDINATES = 'GL_OES_byte_coordinates';
    case GL_OES_COMPRESSED_PALETTED_TEXTURE = 'GL_OES_compressed_paletted_texture';
    case GL_OES_FIXED_POINT = 'GL_OES_fixed_point';
    case GL_OES_QUERY_MATRIX = 'GL_OES_query_matrix';
    case GL_OES_READ_FORMAT = 'GL_OES_read_format';
    case GL_OES_SINGLE_PRECISION = 'GL_OES_single_precision';
    case GL_OML_INTERLACE = 'GL_OML_interlace';
    case GL_OML_RESAMPLE = 'GL_OML_resample';
    case GL_OML_SUBSAMPLE = 'GL_OML_subsample';
    case GL_OVR_MULTIVIEW = 'GL_OVR_multiview';
    case GL_OVR_MULTIVIEW2 = 'GL_OVR_multiview2';
    case GL_PGI_MISC_HINTS = 'GL_PGI_misc_hints';
    case GL_PGI_VERTEX_HINTS = 'GL_PGI_vertex_hints';
    case GL_REND_SCREEN_COORDINATES = 'GL_REND_screen_coordinates';
    case GL_S3_S3TC = 'GL_S3_s3tc';
    case GL_SGIS_COLOR_RANGE = 'GL_SGIS_color_range';
    case GL_SGIS_DETAIL_TEXTURE = 'GL_SGIS_detail_texture';
    case GL_SGIS_FOG_FUNCTION = 'GL_SGIS_fog_function';
    case GL_SGIS_GENERATE_MIPMAP = 'GL_SGIS_generate_mipmap';
    case GL_SGIS_MULTISAMPLE = 'GL_SGIS_multisample';
    case GL_SGIS_PIXEL_TEXTURE = 'GL_SGIS_pixel_texture';
    case GL_SGIS_POINT_LINE_TEXGEN = 'GL_SGIS_point_line_texgen';
    case GL_SGIS_point_parameters = 'GL_SGIS_point_parameters';
    case GL_SGIS_SHARPEN_TEXTURE = 'GL_SGIS_sharpen_texture';
    case GL_SGIS_TEXTURE_4D = 'GL_SGIS_texture4D';
    case GL_SGIS_TEXTURE_BORDER_CLAMP = 'GL_SGIS_texture_border_clamp';
    case GL_SGIS_TEXTURE_COLOR_MASK = 'GL_SGIS_texture_color_mask';
    case GL_SGIS_TEXTURE_EDGE_CLAMP = 'GL_SGIS_texture_edge_clamp';
    case GL_SGIS_TEXTURE_FILTER4 = 'GL_SGIS_texture_filter4';
    case GL_SGIS_TEXTURE_LOD = 'GL_SGIS_texture_lod';
    case GL_SGIS_TEXTURE_SELECT = 'GL_SGIS_texture_select';
    case GL_SGIX_ASYNC = 'GL_SGIX_async';
    case GL_SGIX_ASYNC_HISTOGRAM = 'GL_SGIX_async_histogram';
    case GL_SGIX_ASYNC_PIXEL = 'GL_SGIX_async_pixel';
    case GL_SGIX_BLEND_ALPHA_MINMAX = 'GL_SGIX_blend_alpha_minmax';
    case GL_SGIX_calligraphic_fragment = 'GL_SGIX_calligraphic_fragment';
    case GL_SGIX_CLIPMAP = 'GL_SGIX_clipmap';
    case GL_SGIX_CONVOLUTION_ACCURACY = 'GL_SGIX_convolution_accuracy';
    case GL_SGIX_depth_pass_instrument = 'GL_SGIX_depth_pass_instrument';
    case GL_SGIX_DEPTH_TEXTURE = 'GL_SGIX_depth_texture';
    case GL_SGIX_FLUSH_RASTER = 'GL_SGIX_flush_raster';
    case GL_SGIX_FOG_OFFSET = 'GL_SGIX_fog_offset';
    case GL_SGIX_fragment_lighting = 'GL_SGIX_fragment_lighting';
    case GL_SGIX_FRAMEZOOM = 'GL_SGIX_framezoom';
    case GL_SGIX_igloo_interface = 'GL_SGIX_igloo_interface';
    case GL_SGIX_INSTRUMENTS = 'GL_SGIX_instruments';
    case GL_SGIX_INTERLACE = 'GL_SGIX_interlace';
    case GL_SGIX_IR_INSTRUMENT1 = 'GL_SGIX_ir_instrument1';
    case GL_SGIX_LIST_PRIORITY = 'GL_SGIX_list_priority';
    case GL_SGIX_PIXEL_TEXTURE = 'GL_SGIX_pixel_texture';
    case GL_SGIX_PIXEL_TEXTURE_BITS = 'GL_SGIX_pixel_texture_bits';
    case GL_SGIX_pixel_tiles = 'GL_SGIX_pixel_tiles';
    case GL_SGIX_polynomial_ffd = 'GL_SGIX_polynomial_ffd';
    case GL_SGIX_REFERENCE_PLANE = 'GL_SGIX_reference_plane';
    case GL_SGIX_RESAMPLE = 'GL_SGIX_resample';
    case GL_SGIX_scalebias_hint = 'GL_SGIX_scalebias_hint';
    case GL_SGIX_SHADOW = 'GL_SGIX_shadow';
    case GL_SGIX_SHADOW_AMBIENT = 'GL_SGIX_shadow_ambient';
    case GL_SGIX_SPRITE = 'GL_SGIX_sprite';
    case GL_SGIX_subsample = 'GL_SGIX_subsample';
    case GL_SGIX_TAG_SAMPLE_BUFFER = 'GL_SGIX_tag_sample_buffer';
    case GL_SGIX_TEXTURE_ADD_ENV = 'GL_SGIX_texture_add_env';
    case GL_SGIX_TEXTURE_COORDINATE_CLAMP = 'GL_SGIX_texture_coordinate_clamp';
    case GL_SGIX_TEXTURE_LOD_BIAS = 'GL_SGIX_texture_lod_bias';
    case GL_SGIX_TEXTURE_MULTI_BUFFER = 'GL_SGIX_texture_multi_buffer';
    case GL_SGIX_TEXTURE_RANGE = 'GL_SGIX_texture_range';
    case GL_SGIX_TEXTURE_SCALE_BIAS = 'GL_SGIX_texture_scale_bias';
    case GL_SGIX_VERTEX_PRECLIP = 'GL_SGIX_vertex_preclip';
    case GL_SGIX_VERTEX_PRECLIP_HINT = 'GL_SGIX_vertex_preclip_hint';
    case GL_SGIX_YCRCB = 'GL_SGIX_ycrcb';
    case GL_SGIX_ycrcb_subsample = 'GL_SGIX_ycrcb_subsample';
    case GL_SGIX_ycrcba = 'GL_SGIX_ycrcba';
    case GL_SGI_COLOR_MATRIX = 'GL_SGI_color_matrix';
    case GL_SGI_COLOR_TABLE = 'GL_SGI_color_table';
    case GL_SGI_TEXTURE_COLOR_TABLE = 'GL_SGI_texture_color_table';
    case GL_SUNX_CONSTANT_DATA = 'GL_SUNX_constant_data';
    case GL_SUN_CONVOLUTION_BORDER_MODES = 'GL_SUN_convolution_border_modes';
    case GL_SUN_GLOBAL_ALPHA = 'GL_SUN_global_alpha';
    case GL_SUN_MESH_ARRAY = 'GL_SUN_mesh_array';
    case GL_SUN_MULTI_DRAW_ARRAYS = 'GL_SUN_multi_draw_arrays';
    case GL_SUN_SLICE_ACCUM = 'GL_SUN_slice_accum';
    case GL_SUN_TRIANGLE_LIST = 'GL_SUN_triangle_list';
    case GL_SUN_VERTEX = 'GL_SUN_vertex';
    case GL_WIN_PHONG_SHADING = 'GL_WIN_phong_shading';
    case GL_WIN_SPECULAR_FOG = 'GL_WIN_specular_fog';
    case GLU_EXT_NURBS_TESSELLATOR = 'GLU_EXT_nurbs_tessellator';
    case GLU_EXT_OBJECT_SPACE_TESS = 'GLU_EXT_object_space_tess';
    case GLU_SGI_FILTER4_PARAMETERS = 'GLU_SGI_filter4_parameters';
    case GLX_3DFX_multisample = 'GLX_3DFX_multisample';
    case GLX_AMD_GPU_ASSOCIATION = 'GLX_AMD_gpu_association';
    case GLX_ARB_CONTEXT_FLUSH_CONTROL = 'GLX_ARB_context_flush_control';
    case GLX_ARB_CREATE_CONTEXT = 'GLX_ARB_create_context';
    case GLX_ARB_CREATE_CONTEXT_NO_ERROR = 'GLX_ARB_create_context_no_error';
    case GLX_ARB_CREATE_CONTEXT_PROFILE = 'GLX_ARB_create_context_profile';
    case GLX_ARB_CREATE_CONTEXT_ROBUSTNESS = 'GLX_ARB_create_context_robustness';
    case GLX_ARB_FBCONFIG_FLOAT = 'GLX_ARB_fbconfig_float';
    case GLX_ARB_FRAMEBUFFER_SRGB = 'GLX_ARB_framebuffer_sRGB';
    case GLX_ARB_GET_PROC_ADDRESS = 'GLX_ARB_get_proc_address';
    case GLX_ARB_MULTISAMPLE = 'GLX_ARB_multisample';
    case GLX_ARB_ROBUSTNESS_APPLICATION_ISOLATION = 'GLX_ARB_robustness_application_isolation';
    case GLX_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION = 'GLX_ARB_robustness_share_group_isolation';
    case GLX_ARB_VERTEX_BUFFER_OBJECT = 'GLX_ARB_vertex_buffer_object';
    case GLX_ARB_RENDER_TEXTURE = 'GLX_ARB_render_texture';
    case GLX_EXT_BUFFER_AGE = 'GLX_EXT_buffer_age';
    case GLX_EXT_CONTEXT_PRIORITY = 'GLX_EXT_context_priority';
    case GLX_EXT_CREATE_CONTEXT_ES2_PROFILE = 'GLX_EXT_create_context_es2_profile';
    case GLX_EXT_CREATE_CONTEXT_ES_PROFILE = 'GLX_EXT_create_context_es_profile';
    case GLX_EXT_FBCONFIG_PACKED_FLOAT = 'GLX_EXT_fbconfig_packed_float';
    case GLX_EXT_FRAMEBUFFER_SRGB = 'GLX_EXT_framebuffer_sRGB';
    case GLX_EXT_GET_DRAWABLE_TYPE = 'GLX_EXT_get_drawable_type';
    case GLX_EXT_IMPORT_CONTEXT = 'GLX_EXT_import_context';
    case GLX_EXT_LIBGLVND = 'GLX_EXT_libglvnd';
    case GLX_EXT_NO_CONFIG_CONTEXT = 'GLX_EXT_no_config_context';
    case GLX_EXT_SCENE_MARKER = 'GLX_EXT_scene_marker';
    case GLX_EXT_STEREO_TREE = 'GLX_EXT_stereo_tree';
    case GLX_EXT_swap_control = 'GLX_EXT_swap_control';
    case GLX_EXT_SWAP_CONTROL_TEAR = 'GLX_EXT_swap_control_tear';
    case GLX_EXT_TEXTURE_FROM_PIXMAP = 'GLX_EXT_texture_from_pixmap';
    case GLX_EXT_VISUAL_INFO = 'GLX_EXT_visual_info';
    case GLX_EXT_VISUAL_RATING = 'GLX_EXT_visual_rating';
    case GLX_INTEL_SWAP_EVENT = 'GLX_INTEL_swap_event';
    case GLX_MESA_AGP_OFFSET = 'GLX_MESA_agp_offset';
    case GLX_MESA_COPY_SUB_BUFFER = 'GLX_MESA_copy_sub_buffer';
    case GLX_MESA_PIXMAP_COLORMAP = 'GLX_MESA_pixmap_colormap';
    case GLX_MESA_QUERY_RENDERER = 'GLX_MESA_query_renderer';
    case GLX_MESA_RELEASE_BUFFERS = 'GLX_MESA_release_buffers';
    case GLX_MESA_SET_3DFX_MODE = 'GLX_MESA_set_3dfx_mode';
    case GLX_MESA_SWAP_CONTROL = 'GLX_MESA_swap_control';
    case GLX_MESA_SWAP_FRAME_USAGE = 'GLX_MESA_swap_frame_usage';
    case GLX_NV_COPY_BUFFER = 'GLX_NV_copy_buffer';
    case GLX_NV_COPY_IMAGE = 'GLX_NV_copy_image';
    case GLX_NV_DELAY_BEFORE_SWAP = 'GLX_NV_delay_before_swap';
    case GLX_NV_float_buffer = 'GLX_NV_float_buffer';
    case GLX_NV_MULTIGPU_CONTEXT = 'GLX_NV_multigpu_context';
    case GLX_NV_multisample_coverage = 'GLX_NV_multisample_coverage';
    case GLX_NV_PRESENT_VIDEO = 'GLX_NV_present_video';
    case GLX_NV_robustness_video_memory_purge = 'GLX_NV_robustness_video_memory_purge';
    case GLX_NV_SWAP_GROUP = 'GLX_NV_swap_group';
    case GLX_NV_VIDEO_CAPTURE = 'GLX_NV_video_capture';
    case GLX_NV_VIDEO_OUT = 'GLX_NV_video_out';
    case GLX_NV_VERTEX_ARRAY_RANGE = 'GLX_NV_vertex_array_range';
    case GLX_OML_SWAP_METHOD = 'GLX_OML_swap_method';
    case GLX_OML_SYNC_CONTROL = 'GLX_OML_sync_control';
    case GLX_SGIS_BLENDED_OVERLAY = 'GLX_SGIS_blended_overlay';
    case GLX_SGIS_COLOR_RANGE = 'GLX_SGIS_color_range';
    case GLX_SGIS_MULTISAMPLE = 'GLX_SGIS_multisample';
    case GLX_SGIS_shared_multisample = 'GLX_SGIS_shared_multisample';
    case GLX_SGIX_DM_BUFFER = 'GLX_SGIX_dm_buffer';
    case GLX_SGIX_dmbuffer = 'GLX_SGIX_dmbuffer';
    case GLX_SGIX_FBCONFIG = 'GLX_SGIX_fbconfig';
    case GLX_SGIX_HYPERPIPE = 'GLX_SGIX_hyperpipe';
    case GLX_SGIX_PBUFFER = 'GLX_SGIX_pbuffer';
    case GLX_SGIX_SWAP_BARRIER = 'GLX_SGIX_swap_barrier';
    case GLX_SGIX_SWAP_GROUP = 'GLX_SGIX_swap_group';
    case GLX_SGIX_VIDEO_RESIZE = 'GLX_SGIX_video_resize';
    case GLX_SGIX_VIDEO_RESIZE_FLOAT = 'GLX_SGIX_video_resize_float';
    case GLX_SGIX_VIDEO_SOURCE = 'GLX_SGIX_video_source';
    case GLX_SGIX_VISUAL_SELECT_GROUP = 'GLX_SGIX_visual_select_group';
    case GLX_SGI_CUSHION = 'GLX_SGI_cushion';
    case GLX_SGI_MAKE_CURRENT_READ = 'GLX_SGI_make_current_read';
    case GLX_SGI_SWAP_CONTROL = 'GLX_SGI_swap_control';
    case GLX_SGI_VIDEO_SYNC = 'GLX_SGI_video_sync';
    case GLX_SUN_GET_TRANSPARENT_INDEX = 'GLX_SUN_get_transparent_index';
    case GLX_BUFFER_SWAP_COMPLETE = 'GLX_BufferSwapComplete';
    case GLX_PBUFFER_CLOBBER = 'GLX_PbufferClobber';
    case WGL_3DFX_multisample = 'WGL_3DFX_multisample';
    case WGL_3DL_STEREO_CONTROL = 'WGL_3DL_stereo_control';
    case WGL_AMD_GPU_ASSOCIATION = 'WGL_AMD_gpu_association';
    case WGL_ARB_BUFFER_REGION = 'WGL_ARB_buffer_region';
    case WGL_ARB_CONTEXT_FLUSH_CONTROL = 'WGL_ARB_context_flush_control';
    case WGL_ARB_CREATE_CONTEXT = 'WGL_ARB_create_context';
    case WGL_ARB_CREATE_CONTEXT_NO_ERROR = 'WGL_ARB_create_context_no_error';
    case WGL_ARB_CREATE_CONTEXT_PROFILE = 'WGL_ARB_create_context_profile';
    case WGL_ARB_CREATE_CONTEXT_ROBUSTNESS = 'WGL_ARB_create_context_robustness';
    case WGL_ARB_EXTENSIONS_STRING = 'WGL_ARB_extensions_string';
    case WGL_ARB_FRAMEBUFFER_SRGB = 'WGL_ARB_framebuffer_sRGB';
    case WGL_ARB_MAKE_CURRENT_READ = 'WGL_ARB_make_current_read';
    case WGL_ARB_MULTISAMPLE = 'WGL_ARB_multisample';
    case WGL_ARB_PBUFFER = 'WGL_ARB_pbuffer';
    case WGL_ARB_PIXEL_FORMAT = 'WGL_ARB_pixel_format';
    case WGL_ARB_PIXEL_FORMAT_FLOAT = 'WGL_ARB_pixel_format_float';
    case WGL_ARB_RENDER_TEXTURE = 'WGL_ARB_render_texture';
    case WGL_ARB_ROBUSTNESS_APPLICATION_ISOLATION = 'WGL_ARB_robustness_application_isolation';
    case WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION = 'WGL_ARB_robustness_share_group_isolation';
    case WGL_ATI_PIXEL_FORMAT_FLOAT = 'WGL_ATI_pixel_format_float';
    case WGL_ATI_RENDER_TEXTURE_RECTANGLE = 'WGL_ATI_render_texture_rectangle';
    case WGL_EXT_COLORSPACE = 'WGL_EXT_colorspace';
    case WGL_EXT_CREATE_CONTEXT_ES2_PROFILE = 'WGL_EXT_create_context_es2_profile';
    case WGL_EXT_CREATE_CONTEXT_ES_PROFILE = 'WGL_EXT_create_context_es_profile';
    case WGL_EXT_DEPTH_FLOAT = 'WGL_EXT_depth_float';
    case WGL_EXT_DISPLAY_COLOR_TABLE = 'WGL_EXT_display_color_table';
    case WGL_EXT_EXTENSIONS_STRING = 'WGL_EXT_extensions_string';
    case WGL_EXT_FRAMEBUFFER_SRGB = 'WGL_EXT_framebuffer_sRGB';
    case WGL_EXT_MAKE_CURRENT_READ = 'WGL_EXT_make_current_read';
    case WGL_EXT_MULTISAMPLE = 'WGL_EXT_multisample';
    case WGL_EXT_PBUFFER = 'WGL_EXT_pbuffer';
    case WGL_EXT_PIXEL_FORMAT = 'WGL_EXT_pixel_format';
    case WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT = 'WGL_EXT_pixel_format_packed_float';
    case WGL_EXT_SWAP_CONTROL = 'WGL_EXT_swap_control';
    case WGL_EXT_SWAP_CONTROL_TEAR = 'WGL_EXT_swap_control_tear';
    case WGL_I3D_DIGITAL_VIDEO_CONTROL = 'WGL_I3D_digital_video_control';
    case WGL_I3D_GAMMA = 'WGL_I3D_gamma';
    case WGL_I3D_GENLOCK = 'WGL_I3D_genlock';
    case WGL_I3D_IMAGE_BUFFER = 'WGL_I3D_image_buffer';
    case WGL_I3D_SWAP_FRAME_LOCK = 'WGL_I3D_swap_frame_lock';
    case WGL_I3D_SWAP_FRAME_USAGE = 'WGL_I3D_swap_frame_usage';
    case WGL_NV_DX_INTEROP = 'WGL_NV_DX_interop';
    case WGL_NV_DX_INTEROP2 = 'WGL_NV_DX_interop2';
    case WGL_NV_COPY_IMAGE = 'WGL_NV_copy_image';
    case WGL_NV_DELAY_BEFORE_SWAP = 'WGL_NV_delay_before_swap';
    case WGL_NV_FLOAT_BUFFER = 'WGL_NV_float_buffer';
    case WGL_NV_GPU_AFFINITY = 'WGL_NV_gpu_affinity';
    case WGL_NV_MULTIGPU_CONTEXT = 'WGL_NV_multigpu_context';
    case WGL_NV_multisample_coverage = 'WGL_NV_multisample_coverage';
    case WGL_NV_PRESENT_VIDEO = 'WGL_NV_present_video';
    case WGL_NV_RENDER_DEPTH_TEXTURE = 'WGL_NV_render_depth_texture';
    case WGL_NV_RENDER_TEXTURE_RECTANGLE = 'WGL_NV_render_texture_rectangle';
    case WGL_NV_SWAP_GROUP = 'WGL_NV_swap_group';
    case WGL_NV_vertex_array_range = 'WGL_NV_vertex_array_range';
    case WGL_NV_VIDEO_CAPTURE = 'WGL_NV_video_capture';
    case WGL_NV_VIDEO_OUTPUT = 'WGL_NV_video_output';
    case WGL_OML_SYNC_CONTROL = 'WGL_OML_sync_control';


    /**
     * {@inheritDoc}
     */
    public function getName(): string
    {
        return $this->value;
    }

    /**
     * @param non-empty-string $name
     * @return ExtensionInterface
     */
    public static function create(string $name): ExtensionInterface
    {
        /** @var array<non-empty-string, ExtensionInterface> $identityMap */
        static $identityMap = [];

        return self::tryFrom($name)
            ?? $identityMap[$name]
            ??= new UserExtension($name);
    }

    /**
     * @param ExtensionInterface $ext
     * @return non-empty-string
     */
    public static function toString(ExtensionInterface $ext): string
    {
        return $ext->getName();
    }
}
